//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSSMSSendList
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CommunicateV1Entities : DbContext
    {
        public CommunicateV1Entities()
            : base("name=CommunicateV1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_SendSMS_Insert_Result> usp_SendSMS_Insert(Nullable<int> sMSQueueSentId, Nullable<int> createdById, Nullable<int> senderID)
        {
            var sMSQueueSentIdParameter = sMSQueueSentId.HasValue ?
                new ObjectParameter("SMSQueueSentId", sMSQueueSentId) :
                new ObjectParameter("SMSQueueSentId", typeof(int));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SendSMS_Insert_Result>("usp_SendSMS_Insert", sMSQueueSentIdParameter, createdByIdParameter, senderIDParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeader_Update_Result> usp_TransactionHeader_Update(Nullable<int> transactionHeaderId, string xMLReturn)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var xMLReturnParameter = xMLReturn != null ?
                new ObjectParameter("XMLReturn", xMLReturn) :
                new ObjectParameter("XMLReturn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeader_Update_Result>("usp_TransactionHeader_Update", transactionHeaderIdParameter, xMLReturnParameter);
        }
    
        public virtual ObjectResult<usp_SMSQueueDetail_Select_Result> usp_SMSQueueDetail_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSQueueDetail_Select_Result>("usp_SMSQueueDetail_Select");
        }
    
        public virtual ObjectResult<usp_SMSInstance2_Insert_Result> usp_SMSInstance2_Insert(Nullable<int> sMSTypeId, string phoneNo, string message, Nullable<int> createdById, Nullable<int> senderID, Nullable<int> providerID)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSInstance2_Insert_Result>("usp_SMSInstance2_Insert", sMSTypeIdParameter, phoneNoParameter, messageParameter, createdByIdParameter, senderIDParameter, providerIDParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeaderInstanceShinee_Update_Result> usp_TransactionHeaderInstanceShinee_Update(Nullable<int> transactionHeaderId, string referenceId, Nullable<int> statusID, Nullable<int> sumphone)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var sumphoneParameter = sumphone.HasValue ?
                new ObjectParameter("Sumphone", sumphone) :
                new ObjectParameter("Sumphone", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeaderInstanceShinee_Update_Result>("usp_TransactionHeaderInstanceShinee_Update", transactionHeaderIdParameter, referenceIdParameter, statusIDParameter, sumphoneParameter);
        }
    
        public virtual ObjectResult<usp_SendSMSShinee_Insert_Result> usp_SendSMSShinee_Insert(Nullable<int> sMSQueueSentId, Nullable<int> createdById, Nullable<int> senderID, Nullable<int> sMSTypeId, string phoneNo, string message, Nullable<int> providerID)
        {
            var sMSQueueSentIdParameter = sMSQueueSentId.HasValue ?
                new ObjectParameter("SMSQueueSentId", sMSQueueSentId) :
                new ObjectParameter("SMSQueueSentId", typeof(int));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SendSMSShinee_Insert_Result>("usp_SendSMSShinee_Insert", sMSQueueSentIdParameter, createdByIdParameter, senderIDParameter, sMSTypeIdParameter, phoneNoParameter, messageParameter, providerIDParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeader_UpdateV2_Result> usp_TransactionHeader_UpdateV2(Nullable<int> transactionHeaderId, string jsonReturn)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var jsonReturnParameter = jsonReturn != null ?
                new ObjectParameter("jsonReturn", jsonReturn) :
                new ObjectParameter("jsonReturn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeader_UpdateV2_Result>("usp_TransactionHeader_UpdateV2", transactionHeaderIdParameter, jsonReturnParameter);
        }
    }
}
