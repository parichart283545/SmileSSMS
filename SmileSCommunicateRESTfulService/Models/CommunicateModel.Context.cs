//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileSCommunicateRESTfulService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CommunicateV1DBContext : DbContext
    {
        public CommunicateV1DBContext()
            : base("name=CommunicateV1DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Log_GetDeliveryNotify> Log_GetDeliveryNotify { get; set; }
        public virtual DbSet<Receiver> Receivers { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<Sender> Senders { get; set; }
        public virtual DbSet<SM> SMS { get; set; }
        public virtual DbSet<SMSType> SMSTypes { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionDetail> TransactionDetails { get; set; }
        public virtual DbSet<TransactionDetailStatu> TransactionDetailStatus { get; set; }
        public virtual DbSet<SMSQueueDetail> SMSQueueDetails { get; set; }
        public virtual DbSet<SMSQueueHeader> SMSQueueHeaders { get; set; }
        public virtual DbSet<Provider> Providers { get; set; }
        public virtual DbSet<TransactionHeader> TransactionHeaders { get; set; }
        public virtual DbSet<TransactionStatu> TransactionStatus { get; set; }
    
        public virtual ObjectResult<Nullable<int>> usp_Log_GetDeliveryNotify_Insert(Nullable<System.DateTime> pLogTimeStamp, Nullable<bool> pGet_Success)
        {
            var pLogTimeStampParameter = pLogTimeStamp.HasValue ?
                new ObjectParameter("pLogTimeStamp", pLogTimeStamp) :
                new ObjectParameter("pLogTimeStamp", typeof(System.DateTime));
    
            var pGet_SuccessParameter = pGet_Success.HasValue ?
                new ObjectParameter("pGet_Success", pGet_Success) :
                new ObjectParameter("pGet_Success", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Log_GetDeliveryNotify_Insert", pLogTimeStampParameter, pGet_SuccessParameter);
        }
    
        public virtual ObjectResult<usp_Receiver_Insert_Result> usp_Receiver_Insert(Nullable<int> sMSID, string phoneNo)
        {
            var sMSIDParameter = sMSID.HasValue ?
                new ObjectParameter("SMSID", sMSID) :
                new ObjectParameter("SMSID", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Receiver_Insert_Result>("usp_Receiver_Insert", sMSIDParameter, phoneNoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_Sender_Insert(string senderDetail)
        {
            var senderDetailParameter = senderDetail != null ?
                new ObjectParameter("SenderDetail", senderDetail) :
                new ObjectParameter("SenderDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_Sender_Insert", senderDetailParameter);
        }
    
        public virtual ObjectResult<usp_SMS_Insert_Result> usp_SMS_Insert(string message, Nullable<int> senderID, Nullable<int> sMSTypeID, Nullable<System.DateTime> sendDate, Nullable<int> createdByID, Nullable<System.DateTime> createdDate, Nullable<int> sectionID)
        {
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var sMSTypeIDParameter = sMSTypeID.HasValue ?
                new ObjectParameter("SMSTypeID", sMSTypeID) :
                new ObjectParameter("SMSTypeID", typeof(int));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("SendDate", sendDate) :
                new ObjectParameter("SendDate", typeof(System.DateTime));
    
            var createdByIDParameter = createdByID.HasValue ?
                new ObjectParameter("CreatedByID", createdByID) :
                new ObjectParameter("CreatedByID", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var sectionIDParameter = sectionID.HasValue ?
                new ObjectParameter("SectionID", sectionID) :
                new ObjectParameter("SectionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMS_Insert_Result>("usp_SMS_Insert", messageParameter, senderIDParameter, sMSTypeIDParameter, sendDateParameter, createdByIDParameter, createdDateParameter, sectionIDParameter);
        }
    
        public virtual int usp_SMSType_Insert(string sMSTypeDetail)
        {
            var sMSTypeDetailParameter = sMSTypeDetail != null ?
                new ObjectParameter("SMSTypeDetail", sMSTypeDetail) :
                new ObjectParameter("SMSTypeDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SMSType_Insert", sMSTypeDetailParameter);
        }
    
        public virtual ObjectResult<usp_testSelectSMS_Result> usp_testSelectSMS(Nullable<int> smsid)
        {
            var smsidParameter = smsid.HasValue ?
                new ObjectParameter("smsid", smsid) :
                new ObjectParameter("smsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_testSelectSMS_Result>("usp_testSelectSMS", smsidParameter);
        }
    
        public virtual ObjectResult<usp_Transaction_Insert_Result> usp_Transaction_Insert(Nullable<int> sMSID, string transactionStatusCode, string referenceID, Nullable<int> sumPhone, Nullable<int> usedCredit, Nullable<System.DateTime> createdDate)
        {
            var sMSIDParameter = sMSID.HasValue ?
                new ObjectParameter("SMSID", sMSID) :
                new ObjectParameter("SMSID", typeof(int));
    
            var transactionStatusCodeParameter = transactionStatusCode != null ?
                new ObjectParameter("TransactionStatusCode", transactionStatusCode) :
                new ObjectParameter("TransactionStatusCode", typeof(string));
    
            var referenceIDParameter = referenceID != null ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(string));
    
            var sumPhoneParameter = sumPhone.HasValue ?
                new ObjectParameter("SumPhone", sumPhone) :
                new ObjectParameter("SumPhone", typeof(int));
    
            var usedCreditParameter = usedCredit.HasValue ?
                new ObjectParameter("UsedCredit", usedCredit) :
                new ObjectParameter("UsedCredit", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Transaction_Insert_Result>("usp_Transaction_Insert", sMSIDParameter, transactionStatusCodeParameter, referenceIDParameter, sumPhoneParameter, usedCreditParameter, createdDateParameter);
        }
    
        public virtual ObjectResult<usp_TransactionDetail_Insert_Result> usp_TransactionDetail_Insert(Nullable<int> referenceID, string detail, string phoneNo, string transactionDetailStatusCode, Nullable<System.DateTime> createdDate, Nullable<int> credit)
        {
            var referenceIDParameter = referenceID.HasValue ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(int));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var transactionDetailStatusCodeParameter = transactionDetailStatusCode != null ?
                new ObjectParameter("TransactionDetailStatusCode", transactionDetailStatusCode) :
                new ObjectParameter("TransactionDetailStatusCode", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionDetail_Insert_Result>("usp_TransactionDetail_Insert", referenceIDParameter, detailParameter, phoneNoParameter, transactionDetailStatusCodeParameter, createdDateParameter, creditParameter);
        }
    
        public virtual ObjectResult<usp_TransactionDetail_Select_Result> usp_TransactionDetail_Select(Nullable<int> pTransactionID)
        {
            var pTransactionIDParameter = pTransactionID.HasValue ?
                new ObjectParameter("pTransactionID", pTransactionID) :
                new ObjectParameter("pTransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionDetail_Select_Result>("usp_TransactionDetail_Select", pTransactionIDParameter);
        }
    
        public virtual int usp_TransactionDetailStatus_Insert(string transactionDetailStatusCode, string transactionDetailStatusDetail)
        {
            var transactionDetailStatusCodeParameter = transactionDetailStatusCode != null ?
                new ObjectParameter("TransactionDetailStatusCode", transactionDetailStatusCode) :
                new ObjectParameter("TransactionDetailStatusCode", typeof(string));
    
            var transactionDetailStatusDetailParameter = transactionDetailStatusDetail != null ?
                new ObjectParameter("TransactionDetailStatusDetail", transactionDetailStatusDetail) :
                new ObjectParameter("TransactionDetailStatusDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TransactionDetailStatus_Insert", transactionDetailStatusCodeParameter, transactionDetailStatusDetailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_TransactionNotGetDeliveryNotify_Count_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_TransactionNotGetDeliveryNotify_Count_Select");
        }
    
        public virtual ObjectResult<usp_TransactionNotGetDeliveryNotify_Select_Result> usp_TransactionNotGetDeliveryNotify_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionNotGetDeliveryNotify_Select_Result>("usp_TransactionNotGetDeliveryNotify_Select");
        }
    
        public virtual ObjectResult<usp_TransactionNotGetDeliveryNotify_Update_Result> usp_TransactionNotGetDeliveryNotify_Update(string referenceID)
        {
            var referenceIDParameter = referenceID != null ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionNotGetDeliveryNotify_Update_Result>("usp_TransactionNotGetDeliveryNotify_Update", referenceIDParameter);
        }
    
        public virtual int usp_TransactionStatus_Insert(string transactionStatusCode, string transactionStatusDetail)
        {
            var transactionStatusCodeParameter = transactionStatusCode != null ?
                new ObjectParameter("TransactionStatusCode", transactionStatusCode) :
                new ObjectParameter("TransactionStatusCode", typeof(string));
    
            var transactionStatusDetailParameter = transactionStatusDetail != null ?
                new ObjectParameter("TransactionStatusDetail", transactionStatusDetail) :
                new ObjectParameter("TransactionStatusDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TransactionStatus_Insert", transactionStatusCodeParameter, transactionStatusDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetListOfSMSId_ByPhoneNumber_Select_Result> usp_GetListOfSMSId_ByPhoneNumber_Select(Nullable<int> sMSTypeId, string phoneNumber)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetListOfSMSId_ByPhoneNumber_Select_Result>("usp_GetListOfSMSId_ByPhoneNumber_Select", sMSTypeIdParameter, phoneNumberParameter);
        }
    
        public virtual ObjectResult<usp_GetMessageDetail_BySMSId_Select_Result> usp_GetMessageDetail_BySMSId_Select(Nullable<int> sMSId)
        {
            var sMSIdParameter = sMSId.HasValue ?
                new ObjectParameter("SMSId", sMSId) :
                new ObjectParameter("SMSId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMessageDetail_BySMSId_Select_Result>("usp_GetMessageDetail_BySMSId_Select", sMSIdParameter);
        }
    
        public virtual ObjectResult<usp_GetListSMSByMessage_Select_Result> usp_GetListSMSByMessage_Select(Nullable<int> sMSTypeId, string message)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetListSMSByMessage_Select_Result>("usp_GetListSMSByMessage_Select", sMSTypeIdParameter, messageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SMSQueueDetail_Insert(Nullable<int> sMSQueueHeaderId, Nullable<int> sMSTypeId, string phoneNo, string message)
        {
            var sMSQueueHeaderIdParameter = sMSQueueHeaderId.HasValue ?
                new ObjectParameter("SMSQueueHeaderId", sMSQueueHeaderId) :
                new ObjectParameter("SMSQueueHeaderId", typeof(int));
    
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SMSQueueDetail_Insert", sMSQueueHeaderIdParameter, sMSTypeIdParameter, phoneNoParameter, messageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SMSQueueHeader_Insert(Nullable<int> project, Nullable<int> totalSMS, string remark, Nullable<System.DateTime> sendDate)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(int));
    
            var totalSMSParameter = totalSMS.HasValue ?
                new ObjectParameter("TotalSMS", totalSMS) :
                new ObjectParameter("TotalSMS", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("SendDate", sendDate) :
                new ObjectParameter("SendDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SMSQueueHeader_Insert", projectParameter, totalSMSParameter, remarkParameter, sendDateParameter);
        }
    
        public virtual ObjectResult<usp_SMSInstance_Insert_Result> usp_SMSInstance_Insert(Nullable<int> sMSTypeId, string phoneNo, string message, Nullable<int> createdById, Nullable<int> senderID)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSInstance_Insert_Result>("usp_SMSInstance_Insert", sMSTypeIdParameter, phoneNoParameter, messageParameter, createdByIdParameter, senderIDParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeader_Update_Result> usp_TransactionHeader_Update(Nullable<int> transactionHeaderId, string xMLReturn)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var xMLReturnParameter = xMLReturn != null ?
                new ObjectParameter("XMLReturn", xMLReturn) :
                new ObjectParameter("XMLReturn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeader_Update_Result>("usp_TransactionHeader_Update", transactionHeaderIdParameter, xMLReturnParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeaderInstance_Update_Result> usp_TransactionHeaderInstance_Update(Nullable<int> transactionHeaderId, string xMLReturn)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var xMLReturnParameter = xMLReturn != null ?
                new ObjectParameter("XMLReturn", xMLReturn) :
                new ObjectParameter("XMLReturn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeaderInstance_Update_Result>("usp_TransactionHeaderInstance_Update", transactionHeaderIdParameter, xMLReturnParameter);
        }
    
        public virtual ObjectResult<usp_SMSInstance2_Insert_Result> usp_SMSInstance2_Insert(Nullable<int> sMSTypeId, string phoneNo, string message, Nullable<int> createdById, Nullable<int> senderID, Nullable<int> providerID)
        {
            var sMSTypeIdParameter = sMSTypeId.HasValue ?
                new ObjectParameter("SMSTypeId", sMSTypeId) :
                new ObjectParameter("SMSTypeId", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(int));
    
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSInstance2_Insert_Result>("usp_SMSInstance2_Insert", sMSTypeIdParameter, phoneNoParameter, messageParameter, createdByIdParameter, senderIDParameter, providerIDParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeaderInstance2_Update_Result> usp_TransactionHeaderInstance2_Update(Nullable<int> transactionHeaderId, string referenceId, Nullable<int> statusID, Nullable<int> sumphone)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var sumphoneParameter = sumphone.HasValue ?
                new ObjectParameter("Sumphone", sumphone) :
                new ObjectParameter("Sumphone", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeaderInstance2_Update_Result>("usp_TransactionHeaderInstance2_Update", transactionHeaderIdParameter, referenceIdParameter, statusIDParameter, sumphoneParameter);
        }
    
        public virtual ObjectResult<usp_TransactionPhoneNoGetDeliveryNotify_Select_Result> usp_TransactionPhoneNoGetDeliveryNotify_Select(string referenceId)
        {
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionPhoneNoGetDeliveryNotify_Select_Result>("usp_TransactionPhoneNoGetDeliveryNotify_Select", referenceIdParameter);
        }
    
        public virtual ObjectResult<usp_TransactionGetDeliveryNotify_Select_Result> usp_TransactionGetDeliveryNotify_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionGetDeliveryNotify_Select_Result>("usp_TransactionGetDeliveryNotify_Select");
        }
    
        public virtual int usp_TransactionGetDeliveryNotify_Update(string referenceID, string xMLResult)
        {
            var referenceIDParameter = referenceID != null ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(string));
    
            var xMLResultParameter = xMLResult != null ?
                new ObjectParameter("XMLResult", xMLResult) :
                new ObjectParameter("XMLResult", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TransactionGetDeliveryNotify_Update", referenceIDParameter, xMLResultParameter);
        }
    
        public virtual int usp_TransactionGetDeliveryNotifyV2_Update(string referenceID, string success, string fail, string block, string expired, string processing, string unknown, string credit, string phoneNo, string xMLResult)
        {
            var referenceIDParameter = referenceID != null ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(string));
    
            var successParameter = success != null ?
                new ObjectParameter("Success", success) :
                new ObjectParameter("Success", typeof(string));
    
            var failParameter = fail != null ?
                new ObjectParameter("Fail", fail) :
                new ObjectParameter("Fail", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var expiredParameter = expired != null ?
                new ObjectParameter("Expired", expired) :
                new ObjectParameter("Expired", typeof(string));
    
            var processingParameter = processing != null ?
                new ObjectParameter("Processing", processing) :
                new ObjectParameter("Processing", typeof(string));
    
            var unknownParameter = unknown != null ?
                new ObjectParameter("Unknown", unknown) :
                new ObjectParameter("Unknown", typeof(string));
    
            var creditParameter = credit != null ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var xMLResultParameter = xMLResult != null ?
                new ObjectParameter("XMLResult", xMLResult) :
                new ObjectParameter("XMLResult", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TransactionGetDeliveryNotifyV2_Update", referenceIDParameter, successParameter, failParameter, blockParameter, expiredParameter, processingParameter, unknownParameter, creditParameter, phoneNoParameter, xMLResultParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeaderInstanceShinee_Update_Result> usp_TransactionHeaderInstanceShinee_Update(Nullable<int> transactionHeaderId, string referenceId, Nullable<int> statusID, Nullable<int> sumphone)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var sumphoneParameter = sumphone.HasValue ?
                new ObjectParameter("Sumphone", sumphone) :
                new ObjectParameter("Sumphone", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeaderInstanceShinee_Update_Result>("usp_TransactionHeaderInstanceShinee_Update", transactionHeaderIdParameter, referenceIdParameter, statusIDParameter, sumphoneParameter);
        }
    
        public virtual ObjectResult<usp_TransactionHeaderInstanceOTP_Update_Result> usp_TransactionHeaderInstanceOTP_Update(Nullable<int> transactionHeaderId, string referenceId, Nullable<int> statusID, Nullable<int> sumphone, string token, string refCode)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("ReferenceId", referenceId) :
                new ObjectParameter("ReferenceId", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var sumphoneParameter = sumphone.HasValue ?
                new ObjectParameter("Sumphone", sumphone) :
                new ObjectParameter("Sumphone", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var refCodeParameter = refCode != null ?
                new ObjectParameter("RefCode", refCode) :
                new ObjectParameter("RefCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TransactionHeaderInstanceOTP_Update_Result>("usp_TransactionHeaderInstanceOTP_Update", transactionHeaderIdParameter, referenceIdParameter, statusIDParameter, sumphoneParameter, tokenParameter, refCodeParameter);
        }
    
        public virtual ObjectResult<usp_VerifyOPT_Insert_Result> usp_VerifyOPT_Insert(string token, string refCode, string oTPCode, string phoneNo)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var refCodeParameter = refCode != null ?
                new ObjectParameter("RefCode", refCode) :
                new ObjectParameter("RefCode", typeof(string));
    
            var oTPCodeParameter = oTPCode != null ?
                new ObjectParameter("OTPCode", oTPCode) :
                new ObjectParameter("OTPCode", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VerifyOPT_Insert_Result>("usp_VerifyOPT_Insert", tokenParameter, refCodeParameter, oTPCodeParameter, phoneNoParameter);
        }
    
        public virtual ObjectResult<usp_VerifyOPT_Update_Result> usp_VerifyOPT_Update(Nullable<int> verifyOTPId, string resultSatus, string resultDetail)
        {
            var verifyOTPIdParameter = verifyOTPId.HasValue ?
                new ObjectParameter("VerifyOTPId", verifyOTPId) :
                new ObjectParameter("VerifyOTPId", typeof(int));
    
            var resultSatusParameter = resultSatus != null ?
                new ObjectParameter("ResultSatus", resultSatus) :
                new ObjectParameter("ResultSatus", typeof(string));
    
            var resultDetailParameter = resultDetail != null ?
                new ObjectParameter("ResultDetail", resultDetail) :
                new ObjectParameter("ResultDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VerifyOPT_Update_Result>("usp_VerifyOPT_Update", verifyOTPIdParameter, resultSatusParameter, resultDetailParameter);
        }
    
        public virtual ObjectResult<usp_GetOTPDetail_Result> usp_GetOTPDetail(Nullable<int> transactionHeaderId)
        {
            var transactionHeaderIdParameter = transactionHeaderId.HasValue ?
                new ObjectParameter("TransactionHeaderId", transactionHeaderId) :
                new ObjectParameter("TransactionHeaderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOTPDetail_Result>("usp_GetOTPDetail", transactionHeaderIdParameter);
        }
    }
}
